plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://www.jitpack.io')
    }

    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'com.thenexusreborn:NexusAPI:1.13-ALPHA'
    compileOnly 'com.github.StarDevelopmentLLC:StarLib:1.0.0-alpha.10'
    compileOnly 'com.github.StarDevelopmentLLC:StarClock:1.0.0-alpha.10'
    compileOnly 'com.github.StarDevelopmentLLC:StarCore:1.0.0-alpha.24'
    compileOnly 'com.github.StarDevelopmentLLC:StarChat:1.0.0-alpha.8'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    compileOnly 'org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT'
}

shadowJar {
    dependencies {
        exclude(dependency('com.github.StarDevelopmentLLC:StarLib:1.0.0-alpha.5'))
    }
}

group = 'com.thenexusreborn'
version = '1.12-ALPHA'
description = 'NexusCore'
java.sourceCompatibility = JavaVersion.VERSION_17

processResources {
    filesMatching("*.yml") {
        expand(project.properties)
    }
}

shadowJar {
    archiveClassifier.set('')
    destinationDirectory = file(System.getProperty("user.home") + File.separator + "Documents" + File.separator + "JarOutput" + File.separator + "NexusReborn")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

tasks.jar.finalizedBy(shadowJar)
tasks.publishToMavenLocal.dependsOn(shadowJar)
tasks.compileJava.dependsOn(clean)